# comment to keep editor from exploding in rage, jinja still applies...
# {% from "maps/ports.jinja" import ports with context %}

version: '3'

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      - "{{ nebula_ip }}:{{ ports['torrent_ui'] }}:80"
      # # The HTTP port
      # - "80:80"
      # # The Web UI (enabled by --api.insecure=true)
      # - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${MULLVAD_WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${MULLVAD_ADDRESS}
      - SERVER_CITIES=Amsterdam
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:libtorrentv1
    container_name: qbittorrent
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOAD_ROOT}:/data/torrents
    restart: always
    healthcheck:
      # Container may fail if the PIA's token expired, so mark as unhealthy when there is no internet connection
      # see: https://github.com/qdm12/gluetun/issues/641#issuecomment-933856220
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://127.0.0.1:8080",
          "https://google.com"
        ]
      interval: 5s
      retries: 10
    network_mode: "service:vpn"
    depends_on:
      vpn:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.rule=(PathPrefix(`/qbittorrent`))
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
      - traefik.http.routers.qbittorrent.middlewares=qbittorrent-strip-slash,qbittorrent-stripprefix
      # https://github.com/qbittorrent/qBittorrent/issues/5693#issuecomment-552146296
      - traefik.http.middlewares.qbittorrent-stripprefix.stripPrefix.prefixes=/qbittorrent
      # https://community.traefik.io/t/middleware-to-add-the-if-needed/1895/19
      - traefik.http.middlewares.qbittorrent-strip-slash.redirectregex.regex=(^.*\/qbittorrent$$)
      - traefik.http.middlewares.qbittorrent-strip-slash.redirectregex.replacement=$$1/
      - traefik.http.middlewares.qbittorrent-strip-slash.redirectregex.permanent=false
      - homepage.name=qBittorrent
      - homepage.href=/qbittorrent
      - homepage.description=Get
      - homepage.group=Download
  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      #- JELLYFIN_PublishedServerUrl=${HOSTNAME}/jellyfin
    volumes:
      - ./jellyfin:/config
      - ${DOWNLOAD_ROOT}:/data
    ports:
      - "7359:7359/udp"
      - "1900:1900/udp"
    # gpu availability for transcode
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://127.0.0.1:8096/health"
        ]
      interval: 5s
      retries: 10
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=(PathPrefix(`/jellyfin`))
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.middlewares=jellyfin-stripprefix
      - traefik.http.middlewares.jellyfin-stripprefix.stripPrefix.prefixes=/jellyfin
      - homepage.name=Jellyfin
      - homepage.href=/jellyfin/web/index.html
      - homepage.description=Watch
      - homepage.group=Media
  # Honestly, I just wanna watch most stuff locally in media player classic,
  # jellyfin is good if I'm out and about but having samba is pretty slick.
  # https://old.reddit.com/r/selfhosted/comments/t2x1fy/samba_server_docker_or_native/k6al3a3/
  #
  # # NOTE: samba address from other machines is '\\${NEBULA_IP}\media'
  # DO NOT include the port!!
  samba:
    image: ghcr.io/servercontainers/samba:smbd-wsdd2-a3.19.1-s4.18.9-r0@sha256:3edbe45e27befa900e4dec7fc17298dd5a186eb269ffb3dce716c093a52bef45
    container_name: samba
    hostname: media-samba
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    environment:
      # Arbitrary account, doesn't really matter since nebula is the auth.
      ACCOUNT_viewer: "viewer_password_1000"
      UID_username: 1234
      # Increase to 100 to get full debug logs
      SAMBA_CONF_LOG_LEVEL: 1
      SAMBA_VOLUME_CONFIG_media: "[media]; path=/shares/location; available = yes; browsable = yes; writable = no; read only = yes; force user = viewer; public = yes; guest ok = yes"
    volumes:
      # samba not allowed to write, only read.
      - ${DOWNLOAD_ROOT}:/shares/location:ro
    ports:
      - "{{ nebula_ip }}:{{ ports['torrent_samba'] }}:445"
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      - HOMEPAGE_VAR_TITLE=nebula
    volumes:
      - ./homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ${DATA_ROOT}:/data
    restart: always
    ports:
      - 3000:3000
    command:
      [
        sh,
        -c,
        "cp -n /app/config/tpl/*.yaml /app/config && node server.js"
      ]
    labels:
      - traefik.enable=true
      - traefik.http.routers.homepage.rule=(PathPrefix(`/`))
      - traefik.http.services.homepage.loadbalancer.server.port=3000
